---
import { changeLanguage } from "i18next";
import { type CollectionEntry, getCollection } from "astro:content";
import Posts from "@layouts/Posts.astro";
import PostDetails from "@layouts/PostDetails.astro";
import getSortedPosts from "@utils/getSortedPosts";
import getPageNumbers from "@utils/getPageNumbers";
import getPagination from "@utils/getPagination";
import { getChineseBlogs } from "@content/config";

changeLanguage("zh");

export interface Props {
    post: CollectionEntry<"blog">;
}
export async function getStaticPaths() {
    const posts = await getChineseBlogs("blog", ({ data }) => !data.draft);
    const postResult = posts.map(post => ({
        params: { slug: post.slug.split("/")[1] },
        props: { post },
    }));
    const pagePaths = getPageNumbers(posts.length).map(pageNum => ({
        params: { slug: String(pageNum) },
    }));
    return [...postResult, ...pagePaths];
}
const { slug } = Astro.params;
const { post } = Astro.props;
const posts = await getChineseBlogs("blog");
const sortedPosts = getSortedPosts(posts);
const pagination = getPagination({
    posts: sortedPosts,
    page: slug,
});
---

{post ? <PostDetails post={post} /> : <Posts {...pagination} />}
